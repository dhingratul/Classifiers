clear all;
close all;
clc;

%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/dhingratul/Dropbox/Academics/Fall2015/CS-520/Assignment/Project/Dataset/data/digitdata/testimages
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2015/11/25 23:34:41
addpath('/home/dhingratul/Dropbox/Academics/Fall2015/CS-520/Assignment/Project/Dataset/data/digitdata');

%% Initialize variables.
filename = '/home/dhingratul/Dropbox/Academics/Fall2015/CS-520/Assignment/Project/Dataset/data/digitdata/testimages';
endRow = 27;

%% Format string for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
%	column6: text (%s)
%   column7: text (%s)
%	column8: text (%s)
%   column9: text (%s)
%	column10: text (%s)
%   column11: text (%s)
%	column12: text (%s)
%   column13: text (%s)
%	column14: text (%s)
%   column15: text (%s)
%	column16: text (%s)
%   column17: text (%s)
%	column18: text (%s)
%   column19: text (%s)
%	column20: text (%s)
%   column21: text (%s)
%	column22: text (%s)
%   column23: text (%s)
%	column24: text (%s)
%   column25: text (%s)
%	column26: text (%s)
%   column27: text (%s)
%	column28: text (%s)
%   column29: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%1s%0s%1s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow, 'Delimiter', '', 'WhiteSpace', '', 'ReturnOnError', false);

%% Remove white space around all cell columns.
dataArray{1} = strtrim(dataArray{1});
dataArray{2} = strtrim(dataArray{2});
dataArray{3} = strtrim(dataArray{3});
dataArray{4} = strtrim(dataArray{4});
dataArray{5} = strtrim(dataArray{5});
dataArray{6} = strtrim(dataArray{6});
dataArray{7} = strtrim(dataArray{7});
dataArray{8} = strtrim(dataArray{8});
dataArray{9} = strtrim(dataArray{9});
dataArray{10} = strtrim(dataArray{10});
dataArray{11} = strtrim(dataArray{11});
dataArray{12} = strtrim(dataArray{12});
dataArray{13} = strtrim(dataArray{13});
dataArray{14} = strtrim(dataArray{14});
dataArray{15} = strtrim(dataArray{15});
dataArray{16} = strtrim(dataArray{16});
dataArray{17} = strtrim(dataArray{17});
dataArray{18} = strtrim(dataArray{18});
dataArray{19} = strtrim(dataArray{19});
dataArray{20} = strtrim(dataArray{20});
dataArray{21} = strtrim(dataArray{21});
dataArray{22} = strtrim(dataArray{22});
dataArray{23} = strtrim(dataArray{23});
dataArray{24} = strtrim(dataArray{24});
dataArray{25} = strtrim(dataArray{25});
dataArray{26} = strtrim(dataArray{26});
dataArray{27} = strtrim(dataArray{27});
dataArray{28} = strtrim(dataArray{28});
dataArray{29} = strtrim(dataArray{29});

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
testimages = [dataArray{1:end-1}];
%% Clear temporary variables
clearvars filename endRow formatSpec fileID dataArray ans;